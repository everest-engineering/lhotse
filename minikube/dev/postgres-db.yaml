apiVersion: v1
kind: ConfigMap
metadata:
  name: database-init
data:
  docker-postgres-ddl.sql: "CREATE USER projections WITH PASSWORD 'projections' CREATEDB;
    CREATE USER sessions WITH PASSWORD 'sessions' CREATEDB;
    CREATE USER filemappings WITH PASSWORD 'filemappings' CREATEDB;
    CREATE USER axon WITH PASSWORD 'axon' CREATEDB;

    CREATE DATABASE axon;
    CREATE DATABASE projections;
    CREATE DATABASE filemappings;
    CREATE DATABASE sessions;

    ALTER DATABASE axon owner to axon;
    ALTER DATABASE filemappings owner to filemappings;
    ALTER DATABASE projections owner to projections;
    ALTER DATABASE sessions owner to sessions;"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-db
spec:
  serviceName: database
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
        selector: postgres-db
    spec:
      containers:
      - name: postgres-db
        image: postgres:alpine
        volumeMounts:
        - name: database-init-volume
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        env:
          - name: POSTGRES_DB
            value: postgres
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: postgres
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
      volumes: 
      - name: database-init-volume
        configMap:
          name: database-init
---
apiVersion: v1
kind: Service
metadata:
  name: database
  labels:
    app: postgres-db
spec:
  spec:
  ports:
  - name: postgres-db
    port: 5432
    targetPort: 5432
  selector:
    app: postgres-db
