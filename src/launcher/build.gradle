buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot'
    id "com.avast.gradle.docker-compose" version "${gradleDockerComposeVersion}"
}

apply plugin: 'jacoco'

springBoot {
    buildInfo()
}

bootBuildInfo.mustRunAfter processResources

bootBuildImage {
    imageName = "$organisation/$rootProject.name:$project.version"
}

compileJava.dependsOn(processResources)

test {
    systemProperty "org.gradle.project.buildDir", "$project.buildDir"
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dockerCompose {
    useComposeFiles.add("${rootProject.projectDir}/docker-compose.yml")
    isRequiredBy(tasks.test)
}

dependencies {
    file("../").eachDir { p ->
        if (p.name != "launcher") {
            implementation project(":${p.name}")
        }
    }

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation "engineering.everest.axon:crypto-shredding-extension:${axonCryptoShreddingVersion}"
    implementation "engineering.everest.starterkit:storage:${storageVersion}"
    implementation "engineering.everest.starterkit:media:${mediaVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.keycloak:keycloak-spring-boot-starter'
    implementation "org.axonframework:axon-micrometer:${axonVersion}"
    implementation "io.micrometer:micrometer-core:${microMeterPrometheusVersion}"
    implementation "io.micrometer:micrometer-registry-prometheus:${microMeterPrometheusVersion}"
    implementation "io.prometheus:simpleclient:${prometheusSimpleClientVersion}"
    implementation "io.prometheus:simpleclient_hotspot:${prometheusSimpleClientVersion}"
    implementation "io.prometheus:simpleclient_pushgateway:${prometheusSimpleClientVersion}"
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    implementation "org.postgresql:postgresql:${postgresDriverVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.apache.commons:commons-text:${commonsTextVersion}"
    testImplementation "org.keycloak:keycloak-admin-client:${keycloakVersion}"
    testImplementation "io.zonky.test:embedded-database-spring-test:${zonkyEmbeddedDbVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
    }
}
